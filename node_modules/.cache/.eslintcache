[{"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/index.js":"1","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/reportWebVitals.js":"2","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/App.jsx":"3","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/input.jsx":"4","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/list.jsx":"5","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/item.jsx":"6","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/button.jsx":"7"},{"size":500,"mtime":1645890749446,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1645885186027,"results":"10","hashOfConfig":"9"},{"size":184,"mtime":1645890587875,"results":"11","hashOfConfig":"9"},{"size":1085,"mtime":1646214070901,"results":"12","hashOfConfig":"9"},{"size":593,"mtime":1646215178880,"results":"13","hashOfConfig":"9"},{"size":2236,"mtime":1646226589236,"results":"14","hashOfConfig":"9"},{"size":168,"mtime":1646214093944,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dghwga",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/index.js",[],[],"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/reportWebVitals.js",[],[],"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/App.jsx",[],[],"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/input.jsx",[],[],"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/list.jsx",[],[],["39","40"],"/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/item.jsx",["41"],[],"import React from \"react\";\nimport './item.css'\nimport './innerlist.css'\nimport MyBtn from \"./button\";\n\nexport default class MyItem extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {text: '', done: false, open: false, subtask: [], checked: false}\n        this.doneMaker = this.doneMaker.bind(this)\n        this.innerMaker = this.innerMaker.bind(this)\n        this.changeInput = this.changeInput.bind(this)\n        this.markAsDone = this.markAsDone.bind(this)\n\n    }\n    \n    doneMaker() {\n        // this.setState({done: !this.state.done})\n        this.setState({open: !this.state.open})\n    }\n    changeInput(e) {\n        this.setState({text: e.target.value})\n    }\n    innerMaker(e) {\n        e.preventDefault()\n        this.setState({subtask: [...this.state.subtask, {text: this.state.text}]})\n    }\n    markAsDone() {\n        this.setState({checked: !this.state.checked})\n        console.log(this.state.checked)\n    }\n    render() {\n        return(\n            <li className=\"item-wrap\" >\n                <div className=\"wrap-todo\">\n                    <label className=\"item-label\">\n                        \n                        <input onChange={this.markAsDone} checked={this.state.checked} className=\"default-radio\" type=\"checkbox\"/>\n                        <span className=\"custom-radio\"></span>\n                        <div className=\"todo-item\" onClick={this.doneMaker} key={new Date}>{this.props.item.text}</div>\n                    </label>\n                </div>\n                <div className={this.state.open ? 'open' : 'closed'}>\n                    <form className='inner-form' action=\"\">\n                        <input onChange={this.changeInput}  value={this.state.text} className=\"inner-input\" type=\"text\"/>\n                        <MyBtn onClick={this.innerMaker}></MyBtn>\n                    </form>\n                    <ul className=\"inner-list\">\n                        {\n                            this.state.subtask.map(task=>\n                                <li className=\"inner-item\" key={Math.random()}>{task.text}</li>\n                            )\n                        }\n                    </ul>\n                </div>\n            </li>\n        )\n    }\n}","/Users/tabaqqui/Desktop/react/todo-app/react-do/src/components/button.jsx",[],[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":40,"column":82,"nodeType":"48","messageId":"49","endLine":40,"endColumn":90,"fix":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"53","text":"54"},"no-global-assign","no-unsafe-negation",[1439,1439],"()"]